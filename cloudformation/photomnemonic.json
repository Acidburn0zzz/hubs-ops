{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "InitializeLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/speelycaptor-public-initialize"
      }
    },
    "ConvertLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/speelycaptor-public-convert"
      }
    },
    "InitializeLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "speelycaptor-dev-public-3aa3b848d3a0ffe8",
          "S3Key": "serverless/speelycaptor/public/1563596846651-2019-07-20T04:27:26.651Z/speelycaptor.zip"
        },
        "FunctionName": "speelycaptor-public-initialize",
        "Handler": "index.init",
        "MemorySize": 3000,
        "Role": "arn:aws:iam::558986605633:role/dev-public-speelycaptor",
        "Runtime": "nodejs10.x",
        "Timeout": 120,
        "Environment": {
          "Variables": {
            "scratchBucketRegion": "us-west-1",
            "scratchBucketId": "speelycaptor-dev-public-scratch-3aa3b848d3a0ffe8"
          }
        }
      },
      "DependsOn": [
        "InitializeLogGroup"
      ]
    },
    "InitializeLambdaVersionuGEsNsU7LolV1uhvI1QCqG7DHqqJIKPZSq75Qr2UZX4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "InitializeLambdaFunction"
        },
        "CodeSha256": "cpEDYo9Wv0y2XOCw22hifMlya80iYBx8KiosP9LUfJM="
      }
    },
    "ConvertLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "speelycaptor-dev-public-3aa3b848d3a0ffe8",
          "S3Key": "serverless/speelycaptor/public/1563596846651-2019-07-20T04:27:26.651Z/speelycaptor.zip"
        },
        "FunctionName": "speelycaptor-public-convert",
        "Handler": "index.convert",
        "MemorySize": 3000,
        "Role": "arn:aws:iam::558986605633:role/dev-public-speelycaptor",
        "Runtime": "nodejs10.x",
        "Timeout": 120,
        "Environment": {
          "Variables": {
            "scratchBucketRegion": "us-west-1",
            "scratchBucketId": "speelycaptor-dev-public-scratch-3aa3b848d3a0ffe8"
          }
        },
        "Layers": [
          "arn:aws:lambda:us-west-1:558986605633:layer:ffmpeg:1"
        ]
      },
      "DependsOn": [
        "ConvertLogGroup"
      ]
    },
    "ConvertLambdaVersion6r9Tz9nU0fz0uS0pIOfLPzDPj8KXr21h0B9NmUVDK0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ConvertLambdaFunction"
        },
        "CodeSha256": "cpEDYo9Wv0y2XOCw22hifMlya80iYBx8KiosP9LUfJM="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "public-speelycaptor",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        }
      }
    },
    "ApiGatewayResourceInit": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "init",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceConvert": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "convert",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodInitGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceInit"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "InitializeLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayMethodConvertGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceConvert"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ConvertLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayDeployment1563596836803": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "public"
      },
      "DependsOn": [
        "ApiGatewayMethodInitGet",
        "ApiGatewayMethodConvertGet"
      ]
    },
    "ApiGatewayUsagePlan": {
      "Type": "AWS::ApiGateway::UsagePlan",
      "DependsOn": "ApiGatewayDeployment1563596836803",
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "Stage": "public"
          }
        ],
        "Description": "Usage plan for speelycaptor public stage",
        "UsagePlanName": "speelycaptor-public",
        "Quota": {
          "Limit": 1000,
          "Period": "MONTH"
        },
        "Throttle": {
          "BurstLimit": 10,
          "RateLimit": 5
        }
      }
    },
    "InitializeLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "InitializeLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": {
          "Fn::Join": [
            "",
            [
              "apigateway.",
              {
                "Ref": "AWS::URLSuffix"
              }
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "ConvertLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ConvertLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": {
          "Fn::Join": [
            "",
            [
              "apigateway.",
              {
                "Ref": "AWS::URLSuffix"
              }
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "speelycaptor-dev-public-3aa3b848d3a0ffe8"
    },
    "InitializeLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "InitializeLambdaVersionuGEsNsU7LolV1uhvI1QCqG7DHqqJIKPZSq75Qr2UZX4"
      }
    },
    "ConvertLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ConvertLambdaVersion6r9Tz9nU0fz0uS0pIOfLPzDPj8KXr21h0B9NmUVDK0"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.us-west-1.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/public"
          ]
        ]
      }
    }
  }
}
